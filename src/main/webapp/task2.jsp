<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html lang="en">
<head><title>Task2</title>
    <style>
        body {
            background-image: url("images/img_5.png");
        }
        .no-background {
            backg git push -f -u origin mainround-image: url("images/img_5.png");
        }
    </style></head>
<body>
<h1>Задача 2</h1>
<h2>Теория для решения задачи</h2>
<h4>Переменная – это именованная область памяти, предназначенная для хранения данных, которые могут быть изменены во время выполнения программы. Переменная имеет тип, имя и значение.</h4>
<h4>    Описание переменной имеет следующий синтаксис:</h4>
<h3>тип имя_переменной [=значение];</h3>
<h4> int count=0; //объявление целочисленной переменной и инициализация</h4>
<h4>  char simbol; //объявление символьной переменной без инициализации</h4>
<h4>Имя переменной (идентификатор) может содержать буквы, цифры, символы подчеркивания и доллара (без пробелов). Но имя не должно начинаться с цифры! Прописные и строчные буквы различаются.  В качестве идентификатора нельзя использовать ключевое слово Java.</h4>
<h4>В языке Java определены арифметические операции (+, -, *, /, %), которые можно применять к числовым данным базовых типов, а также к объектам типа char. Если операция  / применяется к целым числам, то выполняется целочисленное деление (дробная часть отбрасывается). Операция % (взятие остатка от деления) применима не только к целым числам, но и к числам с плавающей точкой.  Например, в результате вычисления выражения 10.0%3.0 будет получено 1.0.</h4>
<h4>Инкремент (++) означает увеличение значения переменной на единицу. Т.е. x++; эквивалентен  x = x+1; Аналогично декремент (--) означает уменьшение переменной на единицу (x--; эквивалентен x=x-1;) Эти операции могут иметь одну из форм:</h4>

<h4> префиксную (++x; //аргумент изменяется до его использования)</h4>
<h4>постфиксную (x++; //аргумент изменяется после использования)</h4>
<h4>Операции сравнения (==, !=, >, <, >=, <=) дают в результате логическое значение типа boolean. Их можно применять ко всем числовым типам и типу char. К операндам типа boolean можно применять только проверку на равенство или неравенство, поскольку истинные и ложные значения не имеют отношения порядка. Например, выражение true>false не имеет смысла в Java.</h4>
<table>
    <tr><th>Описание задачи</th>
    <tr><td>Напишите Java-программу для нахождения периметра круга. Радиус = 7,5. За число pi брать 3,14</td></tr>
    <th>Решать</th></tr>
    <tr>
        <th>
            <textarea name="solution3" rows="10" cols="50">public class Main {
    public static void main(String[] args) {
                //напишите ваше решение
    }
}
            </textarea>
        </th>
    <tr>
        <td><button onclick='compileSolution(2)'>Компилировать</button></td></tr>

</table>
<form action="task3.jsp" align="center">
    <input type="submit" value="Следующая задача!">
</form>
<script>
    function compileSolution(taskId) {
        var solution = document.querySelector('input[name="solution"]');
        // Отправка решения на сервер для компиляции и проверки
    }
</script>
</body></html>


